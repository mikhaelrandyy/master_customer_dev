"""10 February 2025 15:03 add table master

Revision ID: 807f874eb695
Revises: 
Create Date: 2025-02-10 15:07:50.316577

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '807f874eb695'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer_dev',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('type', sa.Enum('PERSON', 'ORGANIZATION', 'PERSON_GROUP', name='customerdevenum'), nullable=True),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=40), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=40), nullable=True),
    sa.Column('known_as', sqlmodel.sql.sqltypes.AutoString(length=40), nullable=True),
    sa.Column('business_id_type', sa.Enum('KTP', 'NIB', 'KIA', 'PASPOR', name='jenisidentitasenum'), nullable=False),
    sa.Column('business_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('business_establishment_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('business_id_kitas', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('business_id_creation_date', sa.Date(), nullable=True),
    sa.Column('business_id_valid_until', sa.Date(), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('region', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sub_district', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('district', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=True),
    sa.Column('nationality', sa.Enum('WNI', 'WNA', 'UNKNOWN', name='nationalityenum'), nullable=True),
    sa.Column('nationality_country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('place_of_birth', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('religion', sa.Enum('ISLAM', 'KRISTEN', 'KATHOLIK', 'HINDU', 'BUDDHA', 'KONGHUCU', 'UNKNOWN', name='religionenum'), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'UNKNOWN', name='genderenum'), nullable=True),
    sa.Column('marital_status', sa.Enum('BELUM_KAWIN', 'KAWIN', 'CERAI_HIDUP', 'CERAI_MATI', 'UNKNOWN', name='maritalstatusenum'), nullable=True),
    sa.Column('npwp_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('npwp_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('npwp', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nitku', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('handphone_number', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=True),
    sa.Column('handphone_number_secondary', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=True),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mailing_address_type', sa.Enum('HOME', 'OFFICE', 'COMPANY', 'WAREHOUSE', 'OTHER', 'UNKNOWN', name='addressenum'), nullable=True),
    sa.Column('mailing_other_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mailing_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mailing_sub_district', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mailing_district', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mailing_city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mailing_region', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mailing_country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mailing_postal_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_customer_dev_id'), 'customer_dev', ['id'], unique=False)
    op.create_table('history_log',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('reference_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('before', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('after', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('source_process', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source_table', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('vs_reference', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_history_log_id'), 'history_log', ['id'], unique=False)
    op.create_table('attachment',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('customer_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('doc_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('file_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_process', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer_dev.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attachment_id'), 'attachment', ['id'], unique=False)
    op.create_table('customer_dev_group',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=26), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('customer_parent_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('customer_reference_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['customer_parent_id'], ['customer_dev.id'], ),
    sa.ForeignKeyConstraint(['customer_reference_id'], ['customer_dev.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customer_dev_group_id'), 'customer_dev_group', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_customer_dev_group_id'), table_name='customer_dev_group')
    op.drop_table('customer_dev_group')
    op.drop_index(op.f('ix_attachment_id'), table_name='attachment')
    op.drop_table('attachment')
    op.drop_index(op.f('ix_history_log_id'), table_name='history_log')
    op.drop_table('history_log')
    op.drop_index(op.f('ix_customer_dev_id'), table_name='customer_dev')
    op.drop_table('customer_dev')
    # ### end Alembic commands ###
